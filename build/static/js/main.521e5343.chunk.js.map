{"version":3,"sources":["TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoTemplate.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","styled","div","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","React","memo","TodoListBlock","TodoList","todos","TodoTemplateBlock","TodoTemplate","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","onChange","target","autoFocus","placeholder","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.521e5343.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useRef } from \"react\";\n\nconst initialTodos = [\n  {\n    id: 1,\n    text: \"프로젝트 생성하기\",\n    done: true,\n  },\n  {\n    id: 2,\n    text: \"컴포넌트 스타일링하기\",\n    done: true,\n  },\n  {\n    id: 3,\n    text: \"Context 만들기\",\n    done: false,\n  },\n  {\n    id: 4,\n    text: \"기능 구현하기\",\n    done: false,\n  },\n];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case \"CREATE\":\n      return state.concat(action.todo);\n    case \"TOGGLE\":\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo,\n      );\n    case \"REMOVE\":\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({ children }) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(5);\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function useTodoState() {\n  const context = useContext(TodoStateContext);\n\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n\nexport function useTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n\n  if (!context) {\n    throw new Error(\"Cannot find TodoProvider\");\n  }\n  return context;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTodoState } from \"../TodoContext\";\n\nconst TodoHeadBlock = styled.div`\n  padding-top: 48px;\n  padding-left: 32px;\n  padding-right: 32px;\n  padding-bottom: 24px;\n  border-bottom: 1px solid #e9ecef;\n\n  h1 {\n    margin: 0;\n    font-size: 36px;\n    color: #343a40;\n  }\n\n  .day {\n    margin-top: 4px;\n    color: #868e96;\n    font-size: 21px;\n  }\n\n  .tasks-left {\n    color: #20c997;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n\nfunction TodoHead() {\n  const todos = useTodoState();\n  const undoneTasks = todos.filter((todo) => !todo.done);\n\n  const today = new Date();\n  const dateString = today.toLocaleDateString(\"ko-KR\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n  const dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" });\n\n  return (\n    <TodoHeadBlock>\n      <h1>{dateString}</h1>\n      <div className=\"day\">{dayName}</div>\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\n    </TodoHeadBlock>\n  );\n}\n\nexport default TodoHead;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDone, MdDelete } from \"react-icons/md\";\nimport { useTodoDispatch } from \"../TodoContext\";\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n  display: none;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #38d9a9;\n    `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\n\nfunction TodoItem({ id, done, text }) {\n  const dispatch = useTodoDispatch();\n  const onToggle = () => dispatch({ type: \"TOGGLE\", id });\n  const onRomove = () => dispatch({ type: \"REMOVE\", id });\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle onClick={onToggle} done={done}>\n        {done && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRomove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default React.memo(TodoItem);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTodoState } from \"../TodoContext\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nfunction TodoList() {\n  const todos = useTodoState();\n\n  return (\n    <TodoListBlock>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          done={todo.done}\n        />\n      ))}\n    </TodoListBlock>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TodoTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n  margin: 0 auto;\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction TodoTemplate({ children }) {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;\n","import React, { useState } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport styled, { css } from \"styled-components\";\nimport { useTodoDispatch, useTodoNextId } from \"../TodoContext\";\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border-radius: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e) => setValue(e.target.value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"CREATE\",\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false,\n      },\n    });\n    setValue(\"\");\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              onChange={onChange}\n              value={value}\n              autoFocus\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport TodoHead from \"./components/TodoHead\";\nimport TodoList from \"./components/TodoList\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport { TodoProvider } from \"./TodoContext\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}